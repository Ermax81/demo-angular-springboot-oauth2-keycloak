
services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: "postgres:17"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      # change this to your local path
      - postgres_data:/var/lib/postgresql/data  # Persistance des données"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      POSTGRES_HOST: postgres
    networks:
      - local
    ports:
      - "5432:5432"

  keycloak:
    # production mode
    container_name: keycloak
    hostname: keycloak
    build:
      context: .
      args:
        KEYCLOAK_VERSION: 26.2
    image: keycloak_26.2
    #https://www.keycloak.org/server/hostname Fully dynamic URLs.
    command: ['start', '--optimized', '--verbose', '--hostname-strict', 'false', '--proxy-headers', 'forwarded', '--import-realm']
    depends_on:
      - "postgres"
    environment:
      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
      KC_DB_PASSWORD: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      #KC_DB_URL: jdbc:h2:mem:keycloakdb  # Utilise une base de données en mémoire (uniquement dev)
      KC_DB_USERNAME: postgres
      #KC_HEALTH_ENABLED: 'true'
      KC_HTTP_ENABLED: 'true'
      #KC_METRICS_ENABLED: 'true'
      #KC_HOSTNAME_URL: http://keycloak:8180
      KC_PROXY: reencrypt
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - "8180:8080"
      - "8787:8787" # debug port
    networks:
      - local
    volumes:
      - keycloak_data:/opt/keycloak/data  # Persistance des données de Keycloak
      - ./sso-realm-realm.json:/opt/keycloak/data/import/sso-realm-realm.json

networks:
  local:
    name: local
    driver: bridge

volumes:
  postgres_data:
  keycloak_data: